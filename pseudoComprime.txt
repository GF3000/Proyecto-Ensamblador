comprime(*texto, *salida):
    tam = LongCad(texto)
    tamAux = tam/4
    tamAux = tamAux *4
    dif = tam - tamAux
    tamRedondeado = tam + dif

    textoComp = reservarEspacioEnPila(tamRedondeado)
    punteros = reservarEspacioEnPila(punteros)

    copy(8 primeros caracteres, textoComp)

    punteroTexto = octavo cacrater
    punteroSalida = salida + 5
    punteroMapaBit = 0
    punteroPosCadena 
    
    bucleTexto:
        long = buscaMax (texto, punteroTexto, punteroPosCadena)
        if (long <4)
            copy(caracter[punteroTexto], textoComp)
            //En el byte de puntero en posicion punteroMapaBit ponemos 0
            writeBit(0, punteroMapaBit, punteroSalida)
            punteroTexto++ //aumentamos byte texto
            punteroMapaBit ++ //aumentamos bit MapaBit
            if (punteroMapaBit >= 8)
                punteroMapaBit = 0
                punteroSalida++
            punteroTexto++
            textoComp++
        else
            copy(mem(punteroPosCadena), textoComp)
            textoComp ++
            copy(long, textoComp)
            textoComp+=2
            punteroTexto += long
            writeBit(0, punteroMapaBit, punteroSalida)
            punteroMapaBit ++//aumentamos bit MapaBit
            if (punteroMapaBit >= 8)
                punteroMapaBit = 0
                punteroSalida++
            punteroTexto++
    jmp(bucleTexto)

    //Vamos con la cabecera
    copy(tam, salida)
    salida +=2
    copy("0x01", salida)
    salida += 1
    tamAux = 5 + punteroSalida
    copy(tamAux, salida)
    //El mapa de bit ya deberia estar en su sitio
    
    salida=salida + punteroSalida

    //Copiamos el textoComp de la pila

    contador = punteroPrimeraLetra
    bucleCopia:
        letra = pila[punteroPrimeraLetra]
        copy(letra, salida)
        salida++
        punteroPrimeraLetra++
        //falta condicion de salida
    jmp(bucleCopia)       


descomprime(*cmdo, *salida)
    punteros = reservarEspacioEnPila(punteros)
    long final = read(cmdo)
    long cabecera = read(cmdo+3)
    st (long cabecera, puntero[0])
    punteroByteMapa = read(cmdo, 5)
    st (punteroByteMapa, puntero[1])
    st (punteroTexto, puntero[2])
    st (punteroSalida, puntero[3])

    copy(8 caracteres, salida)
    
    punteroTexto = long cabecera + 8
    punteroSalida = 8
    punteroByteMapa = 0
    coigoBit = (10000000)

    bucleTexto:
        if (and(punteroByteMapa, codigoBit) == 0)
            //no hay compresion
            
            copy(comprido[punteroTexto], salida[punteroSalida])
            punteroTexto++
            punteroSalida++

            if (codigoBit == 00000001)
                codigoBit = 10000000
            else    
                codigoBit = codigoBit/2
        else
            //hay compresion

            posicion = comprido[punteroTexto]
            posicion += long cabecera
            longitud = comprimido[punteroTexto+1]
            contador = 0
            while (contador < longitud)
                copy(comprido[posicion], salida[punteroSalida])
                posicion++
                punteroSalida++
                contador++
            punteroTexto += 3

            if (codigoBit == 00000001)
                codigoBit = 10000000
            else    
                codigoBit = codigoBit/2
                
    if (punteroSalida == longFinal)
        r29 = longFinal
        br fin_descomprime
    else
        br bucleTexto



                

